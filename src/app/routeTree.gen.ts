/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TodosListIdRouteImport } from './routes/todos.$listId'
import { Route as TodosListIdIndexRouteImport } from './routes/todos.$listId.index'
import { Route as TodosListIdShareRouteImport } from './routes/todos.$listId.share'

const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TodosListIdRoute = TodosListIdRouteImport.update({
  id: '/todos/$listId',
  path: '/todos/$listId',
  getParentRoute: () => rootRouteImport,
} as any)
const TodosListIdIndexRoute = TodosListIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TodosListIdRoute,
} as any)
const TodosListIdShareRoute = TodosListIdShareRouteImport.update({
  id: '/share',
  path: '/share',
  getParentRoute: () => TodosListIdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/settings': typeof SettingsRoute
  '/todos/$listId': typeof TodosListIdRouteWithChildren
  '/todos/$listId/share': typeof TodosListIdShareRoute
  '/todos/$listId/': typeof TodosListIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/settings': typeof SettingsRoute
  '/todos/$listId/share': typeof TodosListIdShareRoute
  '/todos/$listId': typeof TodosListIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/settings': typeof SettingsRoute
  '/todos/$listId': typeof TodosListIdRouteWithChildren
  '/todos/$listId/share': typeof TodosListIdShareRoute
  '/todos/$listId/': typeof TodosListIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/settings'
    | '/todos/$listId'
    | '/todos/$listId/share'
    | '/todos/$listId/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/settings' | '/todos/$listId/share' | '/todos/$listId'
  id:
    | '__root__'
    | '/'
    | '/settings'
    | '/todos/$listId'
    | '/todos/$listId/share'
    | '/todos/$listId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SettingsRoute: typeof SettingsRoute
  TodosListIdRoute: typeof TodosListIdRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todos/$listId': {
      id: '/todos/$listId'
      path: '/todos/$listId'
      fullPath: '/todos/$listId'
      preLoaderRoute: typeof TodosListIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todos/$listId/': {
      id: '/todos/$listId/'
      path: '/'
      fullPath: '/todos/$listId/'
      preLoaderRoute: typeof TodosListIdIndexRouteImport
      parentRoute: typeof TodosListIdRoute
    }
    '/todos/$listId/share': {
      id: '/todos/$listId/share'
      path: '/share'
      fullPath: '/todos/$listId/share'
      preLoaderRoute: typeof TodosListIdShareRouteImport
      parentRoute: typeof TodosListIdRoute
    }
  }
}

interface TodosListIdRouteChildren {
  TodosListIdShareRoute: typeof TodosListIdShareRoute
  TodosListIdIndexRoute: typeof TodosListIdIndexRoute
}

const TodosListIdRouteChildren: TodosListIdRouteChildren = {
  TodosListIdShareRoute: TodosListIdShareRoute,
  TodosListIdIndexRoute: TodosListIdIndexRoute,
}

const TodosListIdRouteWithChildren = TodosListIdRoute._addFileChildren(
  TodosListIdRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SettingsRoute: SettingsRoute,
  TodosListIdRoute: TodosListIdRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
