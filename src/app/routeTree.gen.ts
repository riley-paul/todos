/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WithBackImport } from './routes/_withBack'
import { Route as WithAdderImport } from './routes/_withAdder'
import { Route as WithAdderIndexImport } from './routes/_withAdder.index'
import { Route as WithBackSettingsImport } from './routes/_withBack.settings'
import { Route as WithBackListNewImport } from './routes/_withBack.list.new'
import { Route as WithAdderTodosListIdImport } from './routes/_withAdder.todos.$listId'
import { Route as WithBackListListIdEditImport } from './routes/_withBack.list.$listId.edit'

// Create/Update Routes

const WithBackRoute = WithBackImport.update({
  id: '/_withBack',
  getParentRoute: () => rootRoute,
} as any)

const WithAdderRoute = WithAdderImport.update({
  id: '/_withAdder',
  getParentRoute: () => rootRoute,
} as any)

const WithAdderIndexRoute = WithAdderIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WithAdderRoute,
} as any)

const WithBackSettingsRoute = WithBackSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => WithBackRoute,
} as any)

const WithBackListNewRoute = WithBackListNewImport.update({
  id: '/list/new',
  path: '/list/new',
  getParentRoute: () => WithBackRoute,
} as any)

const WithAdderTodosListIdRoute = WithAdderTodosListIdImport.update({
  id: '/todos/$listId',
  path: '/todos/$listId',
  getParentRoute: () => WithAdderRoute,
} as any)

const WithBackListListIdEditRoute = WithBackListListIdEditImport.update({
  id: '/list/$listId/edit',
  path: '/list/$listId/edit',
  getParentRoute: () => WithBackRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_withAdder': {
      id: '/_withAdder'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof WithAdderImport
      parentRoute: typeof rootRoute
    }
    '/_withBack': {
      id: '/_withBack'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof WithBackImport
      parentRoute: typeof rootRoute
    }
    '/_withBack/settings': {
      id: '/_withBack/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof WithBackSettingsImport
      parentRoute: typeof WithBackImport
    }
    '/_withAdder/': {
      id: '/_withAdder/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof WithAdderIndexImport
      parentRoute: typeof WithAdderImport
    }
    '/_withAdder/todos/$listId': {
      id: '/_withAdder/todos/$listId'
      path: '/todos/$listId'
      fullPath: '/todos/$listId'
      preLoaderRoute: typeof WithAdderTodosListIdImport
      parentRoute: typeof WithAdderImport
    }
    '/_withBack/list/new': {
      id: '/_withBack/list/new'
      path: '/list/new'
      fullPath: '/list/new'
      preLoaderRoute: typeof WithBackListNewImport
      parentRoute: typeof WithBackImport
    }
    '/_withBack/list/$listId/edit': {
      id: '/_withBack/list/$listId/edit'
      path: '/list/$listId/edit'
      fullPath: '/list/$listId/edit'
      preLoaderRoute: typeof WithBackListListIdEditImport
      parentRoute: typeof WithBackImport
    }
  }
}

// Create and export the route tree

interface WithAdderRouteChildren {
  WithAdderIndexRoute: typeof WithAdderIndexRoute
  WithAdderTodosListIdRoute: typeof WithAdderTodosListIdRoute
}

const WithAdderRouteChildren: WithAdderRouteChildren = {
  WithAdderIndexRoute: WithAdderIndexRoute,
  WithAdderTodosListIdRoute: WithAdderTodosListIdRoute,
}

const WithAdderRouteWithChildren = WithAdderRoute._addFileChildren(
  WithAdderRouteChildren,
)

interface WithBackRouteChildren {
  WithBackSettingsRoute: typeof WithBackSettingsRoute
  WithBackListNewRoute: typeof WithBackListNewRoute
  WithBackListListIdEditRoute: typeof WithBackListListIdEditRoute
}

const WithBackRouteChildren: WithBackRouteChildren = {
  WithBackSettingsRoute: WithBackSettingsRoute,
  WithBackListNewRoute: WithBackListNewRoute,
  WithBackListListIdEditRoute: WithBackListListIdEditRoute,
}

const WithBackRouteWithChildren = WithBackRoute._addFileChildren(
  WithBackRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof WithBackRouteWithChildren
  '/settings': typeof WithBackSettingsRoute
  '/': typeof WithAdderIndexRoute
  '/todos/$listId': typeof WithAdderTodosListIdRoute
  '/list/new': typeof WithBackListNewRoute
  '/list/$listId/edit': typeof WithBackListListIdEditRoute
}

export interface FileRoutesByTo {
  '': typeof WithBackRouteWithChildren
  '/settings': typeof WithBackSettingsRoute
  '/': typeof WithAdderIndexRoute
  '/todos/$listId': typeof WithAdderTodosListIdRoute
  '/list/new': typeof WithBackListNewRoute
  '/list/$listId/edit': typeof WithBackListListIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_withAdder': typeof WithAdderRouteWithChildren
  '/_withBack': typeof WithBackRouteWithChildren
  '/_withBack/settings': typeof WithBackSettingsRoute
  '/_withAdder/': typeof WithAdderIndexRoute
  '/_withAdder/todos/$listId': typeof WithAdderTodosListIdRoute
  '/_withBack/list/new': typeof WithBackListNewRoute
  '/_withBack/list/$listId/edit': typeof WithBackListListIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/settings'
    | '/'
    | '/todos/$listId'
    | '/list/new'
    | '/list/$listId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/settings'
    | '/'
    | '/todos/$listId'
    | '/list/new'
    | '/list/$listId/edit'
  id:
    | '__root__'
    | '/_withAdder'
    | '/_withBack'
    | '/_withBack/settings'
    | '/_withAdder/'
    | '/_withAdder/todos/$listId'
    | '/_withBack/list/new'
    | '/_withBack/list/$listId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  WithAdderRoute: typeof WithAdderRouteWithChildren
  WithBackRoute: typeof WithBackRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  WithAdderRoute: WithAdderRouteWithChildren,
  WithBackRoute: WithBackRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_withAdder",
        "/_withBack"
      ]
    },
    "/_withAdder": {
      "filePath": "_withAdder.tsx",
      "children": [
        "/_withAdder/",
        "/_withAdder/todos/$listId"
      ]
    },
    "/_withBack": {
      "filePath": "_withBack.tsx",
      "children": [
        "/_withBack/settings",
        "/_withBack/list/new",
        "/_withBack/list/$listId/edit"
      ]
    },
    "/_withBack/settings": {
      "filePath": "_withBack.settings.tsx",
      "parent": "/_withBack"
    },
    "/_withAdder/": {
      "filePath": "_withAdder.index.tsx",
      "parent": "/_withAdder"
    },
    "/_withAdder/todos/$listId": {
      "filePath": "_withAdder.todos.$listId.tsx",
      "parent": "/_withAdder"
    },
    "/_withBack/list/new": {
      "filePath": "_withBack.list.new.tsx",
      "parent": "/_withBack"
    },
    "/_withBack/list/$listId/edit": {
      "filePath": "_withBack.list.$listId.edit.tsx",
      "parent": "/_withBack"
    }
  }
}
ROUTE_MANIFEST_END */
